# 2.4 Моносостояние для экземпляров класса

class Cat:
    __shared_attr = {
        'breed': 'pers',
        'color': 'black'
    }

    def __init__(self):
        self.__dict__ = Cat.__shared_attr
# как сделать так что бы при изменения одного атрибута экземпляра класа это затрагивала все атрибуты других экземпляров класс
# для этого нам необходимо создать прайвед-перемннную в виде словаря(изменяемым обектом)
# при каждай инициализации обекта мы будем подменяь каждому экземпляру нашу перемнную dict и в качестве значения будем брать атрибут нашего класса